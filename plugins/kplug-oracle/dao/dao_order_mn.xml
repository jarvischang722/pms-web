<?xml version="1.0" encoding="UTF-8"?>
<root>
    <!-- [prg_id: PMS0810130 ] -->
    <dao name="CHK_ORDER_MN_RV_TYP_IS_EXIST">
        <statement><![CDATA[
            select count(*) as rvtyp_count
            from order_mn
            where athena_id = :athena_id and trim(hotel_cod) = trim(:hotel_cod) and rownum = 1
        ]]></statement>
        <parameter type="int" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <statement test="_v(param.rv1_typ)"><![CDATA[and rv1_typ is not null]]></statement>
        <statement test="_v(param.rv2_typ)"><![CDATA[and rv2_typ is not null]]></statement>
        <statement test="_v(param.rv3_typ)"><![CDATA[and rv3_typ is not null]]></statement>
        <statement test="_v(param.rv4_typ)"><![CDATA[and rv4_typ is not null]]></statement>
        <statement test="_v(param.rv5_typ)"><![CDATA[and rv5_typ is not null]]></statement>
        <statement test="_v(param.rv6_typ)"><![CDATA[and rv6_typ is not null]]></statement>
        <statement test="_v(param.rv7_typ)"><![CDATA[and rv7_typ is not null]]></statement>
        <statement test="_v(param.rv8_typ)"><![CDATA[and rv8_typ is not null]]></statement>
        <statement test="_v(param.rv9_typ)"><![CDATA[and rv9_typ is not null]]></statement>
        <statement test="_v(param.rv10_typ)"><![CDATA[and rv10_typ is not null]]></statement>
    </dao>

    <!-- [prg_id: PMS0810130 ] -->
    <dao name="CHK_ORDER_MN_RV_TYP_CODE_IS_EXIST">
        <statement><![CDATA[
          select count(*)  as rvtyp_count
          from order_mn
          where athena_id = :athena_id and trim(hotel_cod) = trim(:hotel_cod) and  rownum = 1
        ]]></statement>
        <parameter type="int" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <statement test="_v(param.rv1_typ)"><![CDATA[and rv1_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv2_typ)"><![CDATA[and rv2_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv3_typ)"><![CDATA[and rv3_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv4_typ)"><![CDATA[and rv4_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv5_typ)"><![CDATA[and rv5_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv6_typ)"><![CDATA[and rv6_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv7_typ)"><![CDATA[and rv7_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv8_typ)"><![CDATA[and rv8_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv9_typ)"><![CDATA[and rv9_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv10_typ)"><![CDATA[and rv10_typ = :rv_typ ]]></statement>
        <parameter type="string" kind="3">rv_typ</parameter>
    </dao>

    <!-- [prg_id: PMS0810090 ] -->
    <dao name="GET_ORDER_MN.GUEST_TYP_COUNT">
        <statement><![CDATA[
       select count(*)  as guest_count
       from order_mn
        where athena_id = ?  and trim(hotel_cod) = trim(?)
        and trim(guest_typ) = trim(?) and rownum = 1
        ]]>
        </statement>
        <parameter type="int" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">hotel_cod</parameter>
        <parameter type="string" kind="1">guest_typ</parameter>
    </dao>

    <!-- [prg_id: PMS0810110] -->
    <dao name="GET_ORDER_MN.SOURCE_TYP_COUNT">
        <statement><![CDATA[
        select count(*)  as source_count
        from order_mn
        where athena_id = ?  and trim(hotel_cod) = trim(?)
        and trim(source_typ) = trim(?) and rownum = 1
        ]]>
        </statement>
        <parameter type="int" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">hotel_cod</parameter>
        <parameter type="string" kind="1">source_typ</parameter>
    </dao>

    <!-- [prg_id: PMS0810150] -->
    <dao name="GET_ORDER_MN.GUARENTEE_TYP_COUNT">
        <statement><![CDATA[
       select count(*)  as guarentee_typ_count
       from order_mn
        where athena_id = ? and trim(hotel_cod) = trim(?) and trim(guarentee_typ) = trim(?) and rownum = 1
        ]]>
        </statement>
        <parameter type="int" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">hotel_cod</parameter>
        <parameter type="string" kind="1">guarentee_typ</parameter>
    </dao>

    <!--[PMS0610020 商務公司資料編輯] 合約內容
        合約指定的房價代號未有相關訂房卡指定則可刪除合約
    -->
    <dao name="CHK_RATE_COD_IS_EXIST_IN_ORDER_MN">
        <statement><![CDATA[
            SELECT  COUNT(*) as order_rate_Count
            FROM  ORDER_MN
            WHERE  ATHENA_ID = :athena_id
            AND  ACUST_COD = :cust_cod
            AND  trim(HOTEL_COD) = trim(:hotel_cod)
            AND  EXISTS (
                SELECT  *
                FROM  ORDER_DT
                WHERE  ATHENA_ID = ORDER_MN.ATHENA_ID
                AND  IKEY = ORDER_MN.IKEY
                AND  trim(RATE_COD) = trim(:rate_cod) )
            AND  ROWNUM <= 1
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">cust_cod</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <parameter type="string" kind="3">rate_cod</parameter>
    </dao>

    <!--
    [PMS0620010] 未於訂房卡資料指定者可刪除
    訊息『訂房卡資料已使用，不可刪除』
    -->
    <dao name="CHK_SALES_COD_IS_EXIST_IN_ORDER_MN">
        <statement><![CDATA[
            select count(*) as order_sales_Count
            from order_mn
            where athena_id = :athena_id
            and trim(sales_cod) = trim(:sales_cod)
            and rownum = 1
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">sales_cod</parameter>
    </dao>

    <!--
    [PMS0110040] 取得多筆商務公司cust_mn
    -->
    <dao name="QRY_ORDER_MN">
        <statement><![CDATA[
            select g.guest_way "guest_rf.guest_way", dt.order_sta "order_dt.order_sta", dt.ikey, substr(dt.ikey, 3, 4) ikey_qry, dt.ci_dat "order_dt.ci_dat",
            dt.co_dat "order_dt.co_dat", dt.days "order_dt.days", dt.room_cod "order_dt.room_cod", dt.room_cod "order_dt.room_sna", dt.order_qnt "order_dt.order_qnt",
            dt.assign_qnt "order_dt.assign_qnt", dt.ci_qnt "order_dt.ci_qnt",
            pg_hfd_get_nam2.sf_hfd_get_psngr_list(dt.ikey, dt.ikey_seq_nos, 0, '#1####', mn.athena_id, mn.hotel_cod) full_nam,
            mn.group_nos, mn.cust_nam, mn.atten_nam, dt.rate_cod "order_dt.rate_cod", dt.source_typ "order_dt.source_typ",
            (select deposit_nos || ':' || deposit_mn.alt_nam from deposit_mn where deposit_nos = nvl(mn.deposit_nos, '!!!')) deposit_nos,
            mn.confirm_sta, mn.confirm_dat, dt.use_cod "order_dt.use_cod", dt.use_cod "order_dt.use_sna", dt.guest_typ "order_dt.guest_typ", mn.master_nos,
            mn.rvreserve_nos, dt.ins_dat "order_dt.ins_dat", dt.ins_usr "order_dt.ins_usr", dt.upd_dat "order_dt.upd_dat", dt.upd_usr "order_dt.upd_usr",
            mn.sales_cod, mn.hotel_cod, mn.acust_nam
            from order_mn mn
            join order_dt dt on mn.athena_id = dt.athena_id
            and mn.hotel_cod = dt.hotel_cod
            and mn.ikey = dt.ikey
            left join guest_rf g on dt.athena_id = g.athena_id and dt.guest_typ = g.guest_typ
            where dt.athena_id = :athena_id
            and dt.hotel_cod = :hotel_cod
            and dt.order_sta <> 'X'
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <!-- 速查 -->
        <statement test="_v(param.ikey_qry)"><![CDATA[
            and
            (mn.acust_nam like :ikey_qry
            or mn.atten_nam like :ikey_qry
            or mn.cust_nam like :ikey_qry
            or mn.ikey like :ikey_qry
            or mn.group_nos like :ikey_qry
            or mn.rvreserve_nos like :ikey_qry)
        ]]></statement>
        <parameter type="likestring" kind="3">ikey_qry</parameter>
        <!-- 連絡電話 -->
        <statement test="_v(param.tel_nos)"><![CDATA[
            and (mn.mobile_nos like :tel_nos
            or mn.office_tel like :tel_nos
            or mn.home_tel like :tel_nos
            or mn.fax_nos like :tel_nos
            or mn.e_mail like :tel_nos)
        ]]></statement>
        <parameter type="likestring" kind="3">tel_nos</parameter>
        <!-- 新增/修改者 -->
        <statement test="_v(param['order_dt.upd_usr'])"><![CDATA[
            and (dt.ins_usr like :order_dt.upd_usr
            or dt.upd_usr like :order_dt.upd_usr)
        ]]></statement>
        <parameter type="likestring" kind="3">order_dt.upd_usr</parameter>
    </dao>
</root>