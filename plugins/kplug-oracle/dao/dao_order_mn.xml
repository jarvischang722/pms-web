<?xml version="1.0" encoding="UTF-8"?>
<root>
    <!-- [prg_id: PMS0810130 ] -->
    <dao name="CHK_ORDER_MN_RV_TYP_IS_EXIST">
        <statement><![CDATA[
            select count(*) as rvtyp_count
            from order_mn
            where athena_id = :athena_id and trim(hotel_cod) = trim(:hotel_cod) and rownum = 1
        ]]></statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <statement test="_v(param.rv1_typ)"><![CDATA[and rv1_typ is not null]]></statement>
        <statement test="_v(param.rv2_typ)"><![CDATA[and rv2_typ is not null]]></statement>
        <statement test="_v(param.rv3_typ)"><![CDATA[and rv3_typ is not null]]></statement>
        <statement test="_v(param.rv4_typ)"><![CDATA[and rv4_typ is not null]]></statement>
        <statement test="_v(param.rv5_typ)"><![CDATA[and rv5_typ is not null]]></statement>
        <statement test="_v(param.rv6_typ)"><![CDATA[and rv6_typ is not null]]></statement>
        <statement test="_v(param.rv7_typ)"><![CDATA[and rv7_typ is not null]]></statement>
        <statement test="_v(param.rv8_typ)"><![CDATA[and rv8_typ is not null]]></statement>
        <statement test="_v(param.rv9_typ)"><![CDATA[and rv9_typ is not null]]></statement>
        <statement test="_v(param.rv10_typ)"><![CDATA[and rv10_typ is not null]]></statement>
    </dao>

    <!-- [prg_id: PMS0810130 ] -->
    <dao name="CHK_ORDER_MN_RV_TYP_CODE_IS_EXIST">
        <statement><![CDATA[
          select count(*)  as rvtyp_count
          from order_mn
          where athena_id = :athena_id and trim(hotel_cod) = trim(:hotel_cod) and  rownum = 1
        ]]></statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <statement test="_v(param.rv1_typ)"><![CDATA[and rv1_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv2_typ)"><![CDATA[and rv2_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv3_typ)"><![CDATA[and rv3_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv4_typ)"><![CDATA[and rv4_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv5_typ)"><![CDATA[and rv5_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv6_typ)"><![CDATA[and rv6_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv7_typ)"><![CDATA[and rv7_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv8_typ)"><![CDATA[and rv8_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv9_typ)"><![CDATA[and rv9_typ = :rv_typ ]]></statement>
        <statement test="_v(param.rv10_typ)"><![CDATA[and rv10_typ = :rv_typ ]]></statement>
        <parameter type="string" kind="3">rv_typ</parameter>
    </dao>

    <!-- [prg_id: PMS0810110] -->
    <dao name="GET_ORDER_MN.SOURCE_TYP_COUNT">
        <statement><![CDATA[
        select count(*)  as source_count
        from order_mn
        where athena_id = ?  and trim(hotel_cod) = trim(?)
        and trim(source_typ) = trim(?) and rownum = 1
        ]]>
        </statement>
        <parameter type="number" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">hotel_cod</parameter>
        <parameter type="string" kind="1">source_typ</parameter>
    </dao>

    <!-- [prg_id: PMS0810150] -->
    <dao name="GET_ORDER_MN.GUARENTEE_TYP_COUNT">
        <statement><![CDATA[
       select count(*)  as guarentee_typ_count
       from order_mn
        where athena_id = ? and trim(hotel_cod) = trim(?) and trim(guarentee_typ) = trim(?) and rownum = 1
        ]]>
        </statement>
        <parameter type="number" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">hotel_cod</parameter>
        <parameter type="string" kind="1">guarentee_typ</parameter>
    </dao>

    <!--[PMS0610020 商務公司資料編輯] 合約內容
        合約指定的房價代號未有相關訂房卡指定則可刪除合約
    -->
    <dao name="CHK_RATE_COD_IS_EXIST_IN_ORDER_MN">
        <statement><![CDATA[
            SELECT  COUNT(*) as order_rate_Count
            FROM  ORDER_MN
            WHERE  ATHENA_ID = :athena_id
            AND  ACUST_COD = :cust_cod
            AND  trim(HOTEL_COD) = trim(:hotel_cod)
            AND  EXISTS (
                SELECT  *
                FROM  ORDER_DT
                WHERE  ATHENA_ID = ORDER_MN.ATHENA_ID
                AND  IKEY = ORDER_MN.IKEY
                AND  trim(RATE_COD) = trim(:rate_cod) )
            AND  ROWNUM <= 1
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">cust_cod</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <parameter type="string" kind="3">rate_cod</parameter>
    </dao>

    <!--
    [PMS0620010] 未於訂房卡資料指定者可刪除
    訊息『訂房卡資料已使用，不可刪除』
    -->
    <dao name="CHK_SALES_COD_IS_EXIST_IN_ORDER_MN">
        <statement><![CDATA[
            select count(*) as order_sales_Count
            from order_mn
            where athena_id = :athena_id
            and trim(sales_cod) = trim(:sales_cod)
            and rownum = 1
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">sales_cod</parameter>
    </dao>

    <!--
    [PMS0110040] 取得多筆商務公司cust_mn
    -->
    <dao name="QRY_ORDER_MN">
        <statement><![CDATA[
            select order_dt.ikey, order_dt.order_sta "order_dt.order_sta", order_dt.ci_dat "order_dt.ci_dat",
            order_dt.co_dat "order_dt.co_dat", order_dt.days "order_dt.days",
            order_dt.rate_cod "order_dt.rate_cod", order_dt.use_cod "order_dt.use_cod", order_dt.use_cod "order_dt.use_sna",
            order_dt.room_cod "order_dt.room_cod", order_dt.room_cod "order_dt.room_sna",
            sum(order_dt.order_qnt) "order_dt.order_qnt", sum(order_dt.assign_qnt) "order_dt.assign_qnt", sum(order_dt.ci_qnt) "order_dt.ci_qnt",
            order_dt.rent_amt, order_dt.serv_amt, order_mn.group_nos, order_mn.acust_nam, order_mn.atten_nam, order_mn.sales_cod,
            order_mn.rvreserve_nos
            from order_dt, order_mn, guest_rf g
            where order_dt.athena_id = g.athena_id(+)
            and order_dt.guest_typ = g.guest_typ(+)
            and order_dt.athena_id = order_mn.athena_id
            and order_dt.hotel_cod = order_mn.hotel_cod
            and order_dt.ikey = order_mn.ikey
            and order_dt.athena_id = :athena_id
            and order_dt.hotel_cod = :hotel_cod
            and order_dt.ikey = order_mn.ikey
            and order_dt.order_sta <> 'X'
            group by order_dt.ikey, order_dt.order_sta, order_dt.ci_dat, order_dt.co_dat, order_dt.days,
            order_dt.rate_cod, order_dt.use_cod, order_dt.room_cod, order_dt.rent_amt, order_dt.serv_amt,
            order_dt.block_cod, order_mn.group_nos, order_mn.acust_nam, order_mn.atten_nam,
            order_mn.sales_cod, order_mn.rvreserve_nos
            order by order_dt.ikey,decode (order_sta,'N','1','I','2','O','3','S','4','5') ,ci_dat, co_dat,rate_cod,use_cod,
            room_cod,rent_amt,serv_amt,block_cod
        ]]>
        </statement>

        <!--<statement test="_d(param.full_nam) == ''"><![CDATA[-->
            <!--where dt.athena_id = :athena_id-->
            <!--and dt.hotel_cod = :hotel_cod-->
            <!--and dt.order_sta <> 'X'-->
        <!--]]></statement>-->
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <!-- full_nam -->
        <statement test="_d(param.full_nam) != ''"><![CDATA[
                where exists
                (select 1 from guest_mn
                where guest_mn.athena_id = order_dt.athena_id
                and guest_mn.hotel_cod = order_dt.hotel_cod
                and guest_mn.ikey = order_dt.ikey
                and guest_mn.ikey_seq_nos = order_dt.ikey_seq_nos
                and (guest_mn.alt_nam like :full_nam
                or  guest_mn.first_nam like :full_nam
                or guest_mn.last_nam like :full_nam)
                and guest_mn.master_sta = 'G'
                and guest_mn.guest_sta <> 'X')
        ]]></statement>
        <parameter type="likestring" kind="3">full_nam</parameter>
        <!-- 訂房卡號 -->
        <statement test="_v(param.ikey)"><![CDATA[
            and dt.ikey like :ikey
        ]]></statement>
        <parameter type="likestring" kind="3">ikey</parameter>
        <!-- 官網/聯訂中心 -->
        <statement test="_v(param.rvreserve_nos)"><![CDATA[
            and mn.rvreserve_nos like :rvreserve_nos
        ]]></statement>
        <parameter type="likestring" kind="3">rvreserve_nos</parameter>
        <!-- C/I日期 -->
        <statement test="_v(param['order_dt.ci_dat'])"><![CDATA[
            and dt.ci_dat = to_date(:order_dt.ci_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">order_dt.ci_dat</parameter>
        <!-- C/O日期 -->
        <statement test="_v(param['order_dt.co_dat'])"><![CDATA[
            and dt.co_dat = to_date(:order_dt.co_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">order_dt.co_dat</parameter>
        <!-- 訂房卡狀態 -->
        <statement test="_v(param['order_dt.order_sta'])"><![CDATA[
            and dt.order_sta in(:order_dt.order_sta)
        ]]></statement>
        <parameter type="instring" kind="3">order_dt.order_sta</parameter>
        <!-- 種類 -->
        <statement test="_v(param['guest_rf.guest_way'])"><![CDATA[
            and g.guest_way in(:guest_rf.guest_way)
        ]]></statement>
        <parameter type="instring" kind="3">guest_rf.guest_way</parameter>
        <!-- 房價代號 -->
        <statement test="_v(param['order_dt.rate_cod'])"><![CDATA[
            and dt.rate_cod in(:order_dt.rate_cod)
        ]]></statement>
        <parameter type="instring" kind="3">order_dt.rate_cod</parameter>
        <!-- 計價房型 -->
        <statement test="_v(param['order_dt.use_cod'])"><![CDATA[
            and dt.use_cod in(:order_dt.use_cod)
        ]]></statement>
        <parameter type="instring" kind="3">order_dt.use_cod</parameter>
        <!-- 使用房型 -->
        <statement test="_v(param['order_dt.room_cod'])"><![CDATA[
            and dt.room_cod in(:order_dt.room_cod)
        ]]></statement>
        <parameter type="instring" kind="3">order_dt.room_cod</parameter>
        <!-- 公帳號 -->
        <statement test="_v(param.master_nos)"><![CDATA[
            and mn.master_nos in(:master_nos)
        ]]></statement>
        <parameter type="instring" kind="3">master_nos</parameter>
        <!-- 團號 -->
        <statement test="_v(param.group_nos)"><![CDATA[
            and mn.group_nos like :group_nos
        ]]></statement>
        <parameter type="likestring" kind="3">group_nos</parameter>
        <!-- 訂房公司 -->
        <statement test="_v(param.acust_nam)"><![CDATA[
            and mn.acust_nam like :acust_nam
        ]]></statement>
        <parameter type="likestring" kind="3">acust_nam</parameter>
        <!-- 公司名稱 -->
        <statement test="_v(param.cust_nam)"><![CDATA[
            and mn.cust_nam like :cust_nam
        ]]></statement>
        <parameter type="likestring" kind="3">cust_nam</parameter>
        <!-- 聯絡人 -->
        <statement test="_v(param.atten_nam)"><![CDATA[
            and mn.atten_nam like :atten_nam
        ]]></statement>
        <parameter type="likestring" kind="3">atten_nam</parameter>
        <!-- 鎖控代號 -->
        <statement test="_v(param.block_cod)"><![CDATA[
            and mn.block_cod in(:block_cod)
        ]]></statement>
        <parameter type="instring" kind="3">block_cod</parameter>
        <!-- 訂房來源 -->
        <statement test="_v(param['order_dt.source_typ'])"><![CDATA[
            and dt.source_typ in(:order_dt.source_typ)
        ]]></statement>
        <parameter type="instring" kind="3">order_dt.source_typ</parameter>
        <!-- 市場類別 -->
        <statement test="_v(param['order_dt.guest_typ'])"><![CDATA[
            and dt.guest_typ in(:order_dt.guest_typ)
        ]]></statement>
        <parameter type="instring" kind="3">order_dt.guest_typ</parameter>
        <!-- 訂房備註 -->
        <statement test="_v(param.order_rmk)"><![CDATA[
            and mn.order_rmk like :order_rmk
        ]]></statement>
        <parameter type="likestring" kind="3">order_rmk</parameter>
        <!-- 保留日期 -->
        <statement test="_v(param.keep_dat)"><![CDATA[
            and mn.keep_dat = to_date(:keep_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">keep_dat</parameter>
        <!-- 是否確認 -->
        <statement test="_v(param.confirm_sta)"><![CDATA[
            and mn.confirm_sta in(:confirm_sta)
        ]]></statement>
        <parameter type="instring" kind="3">confirm_sta</parameter>
        <!-- 確認日期 -->
        <statement test="_v(param.confirm_dat)"><![CDATA[
            and mn.confirm_dat = to_date(:confirm_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">confirm_dat</parameter>
        <!-- 確認者 -->
        <statement test="_v(param.confirm_usr)"><![CDATA[
            and mn.confirm_usr like :confirm_usr
        ]]></statement>
        <parameter type="likestring" kind="3">confirm_usr</parameter>
        <!-- 取消者 -->
        <statement test="_v(param.cancel_usr)"><![CDATA[
            and mn.cancel_usr like :cancel_usr
        ]]></statement>
        <parameter type="likestring" kind="3">cancel_usr</parameter>
        <!-- 取消日期 -->
        <statement test="_v(param.cancel_dat)"><![CDATA[
            and mn.cancel_dat = to_date(:cancel_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">cancel_dat</parameter>

        <!-- 速查 -->
        <statement test="_v(param.ikey_qry)"><![CDATA[
            and
            (mn.acust_nam like :ikey_qry
            or mn.atten_nam like :ikey_qry
            or mn.cust_nam like :ikey_qry
            or mn.ikey like :ikey_qry
            or mn.group_nos like :ikey_qry
            or mn.rvreserve_nos like :ikey_qry)
        ]]></statement>
        <parameter type="likestring" kind="3">ikey_qry</parameter>
        <!-- 連絡電話 -->
        <statement test="_v(param.tel_nos)"><![CDATA[
            and (mn.mobile_nos like :tel_nos
            or mn.office_tel like :tel_nos
            or mn.home_tel like :tel_nos
            or mn.fax_nos like :tel_nos
            or mn.e_mail like :tel_nos)
        ]]></statement>
        <parameter type="likestring" kind="3">tel_nos</parameter>
        <!-- 新增/修改者 -->
        <statement test="_v(param['order_dt.upd_usr'])"><![CDATA[
            and (dt.ins_usr like :order_dt.upd_usr
            or dt.upd_usr like :order_dt.upd_usr)
        ]]></statement>
        <parameter type="likestring" kind="3">order_dt.upd_usr</parameter>
        <!-- 新增日 -->
        <statement test="_v(param['order_dt.ins_dat'])"><![CDATA[
            and trunc(dt.ins_dat) = to_date(:order_dt.ins_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">order_dt.ins_dat</parameter>
        <!-- 修改日 -->
        <statement test="_v(param['order_dt.upd_dat'])"><![CDATA[
            and trunc(dt.upd_dat) = to_date(:order_dt.upd_dat, 'YYYY/MM/DD')
        ]]></statement>
        <parameter type="string" kind="3">order_dt.upd_dat</parameter>
    </dao>
</root>