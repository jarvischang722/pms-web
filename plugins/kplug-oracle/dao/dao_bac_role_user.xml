<?xml version="1.0" encoding="UTF-8"?>
<root>
    <!-- 使用者有權限的公司 -->
    <dao name="QUY_ROLE_USER_USE_HOTELS">
        <statement><![CDATA[
			SELECT DISTINCT hotel_rf.hotel_nam ,hotel_rf.hotel_cod,brf.FUNC_ATHENA_ID as athena_id
			FROM  hotel_rf
			INNER JOIN  bac_role_function brf ON brf.func_hotel_cod = hotel_rf.hotel_cod
			join bac_role_user bru ON brf.role_athena_id = bru.role_athena_id and brf.role_id = bru.role_id
			WHERE trim(bru.USER_ATHENA_ID) = trim(:user_athena_id)
			AND trim(bru.user_id) = trim(:user_id)
        ]]>
        </statement>
        <parameter type="string" kind="3">user_athena_id</parameter>
        <parameter type="string" kind="3">user_id</parameter>
    </dao>


    <!-- 使用者可選的系統 -->
    <dao name="QUY_ROLE_USER_USE_SYSTEM">
        <statement><![CDATA[
            SELECT  DISTINCT   current_id as sys_id, sys.SYS_NAME as sys_name_zh_tw,  sys.SYS_ENAME as sys_name_en, sys.SORT_COD
            FROM BAC_ROLE_FUNCTION  brf
            JOIN bac_role_user bru ON brf.role_athena_id = bru.role_athena_id and brf.role_id = bru.role_id
            JOIN S99_SYSTEM  sys   on sys.SYS_ID = brf.current_id
            where trim(bru.user_comp_cod) = trim(:user_comp_cod)
            AND trim(func_comp_cod) = trim(:fun_comp_cod)
            and trim(func_hotel_cod) = trim(:fun_hotel_cod)
            AND brf.ID_TYP = 'SYSTEM'
        ]]>
        </statement>
        <parameter type="string" kind="3">user_comp_cod</parameter>
        <statement test="_v(param.user_id)"><![CDATA[and trim(bru.user_id) = trim(:user_id)]]></statement>
        <parameter type="string" kind="3">user_id</parameter>
        <parameter type="string" kind="3">fun_comp_cod</parameter>
        <parameter type="string" kind="3">fun_hotel_cod</parameter>
        <orderby>order by sys.SORT_COD</orderby>

    </dao>


    <!--使用者可使用作業menu-->
    <dao name="QRY_BAC_SYS_MODULE_BY_USER">
        <statement><![CDATA[
            select distinct a.func_athena_id menu_athena_ID, trim(func_comp_cod) as func_comp_cod, a.role_id,
            trim(func_hotel_cod) as func_hotel_cod , pre_id , current_id , id_typ ,level_nos ,sort_cod, UPPER(a.edition) as edition from BAC_ROLE_FUNCTION a
            join bac_role_user b on a.role_athena_id = b.role_athena_id and a.role_comp_cod = b.role_comp_cod and a.role_id = b.role_id
            where b.user_athena_id = :user_athena_id
            and trim(b.user_comp_cod) = trim(:user_comp_cod)
            and trim(a.func_athena_id) = trim(:athena_id)
            and trim(a.func_hotel_cod) = trim(:func_hotel_cod)
        ]]>
        </statement>
        <parameter type="string" kind="3">user_athena_id</parameter>
        <parameter type="string" kind="3">user_comp_cod</parameter>
        <parameter type="string" kind="3">user_id</parameter>
        <parameter type="string" kind="3">role_id</parameter>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">func_hotel_cod</parameter>
        <statement test="_v(param.user_id)"><![CDATA[and trim(b.user_id) = trim(:user_id)]]></statement>
        <statement test="_v(param.role_id)"><![CDATA[and trim(b.role_id) = trim(:role_id)]]></statement>
        <parameter type="string" kind="2" condition="pre_id = :pre_id ">pre_id</parameter>
        <parameter type="string" kind="2" condition="current_id = :current_id ">current_id</parameter>
        <parameter type="string" kind="2" condition="id_typ = :id_typ ">id_typ</parameter>
        <orderby>order by level_nos,sort_cod,current_id</orderby>
    </dao>

    <!--找出模組相對應的process-->
    <dao name="QRY_BAC_PROCESS_BY_MODULE">
        <statement><![CDATA[
         select distinct sys_id, mdl_id , pro_id, pro_name as pro_name_zh_TW, pro_ename as pro_name_en , pro_url ,pro.flag2_sta
            from BAC_ROLE_FUNCTION a
            join bac_role_user b on a.role_athena_id = b.role_athena_id and a.role_comp_cod = b.role_comp_cod and a.role_id = b.role_id
            inner join s99_process  pro  on pro.mdl_id = pre_id
            where b.user_athena_id = :user_athena_id
            and trim(b.user_comp_cod) = :user_comp_cod
            and trim(b.user_id) = :user_id
            and  trim(a.func_athena_id) = trim(:athena_id)
            and  trim(a.func_hotel_cod) = trim(:func_hotel_cod)
            and id_typ <> 'FUNCTION'
            and flag2_sta = 'Y'
        ]]>
        </statement>
        <parameter type="number" kind="3">user_athena_id</parameter>
        <parameter type="string" kind="3">user_comp_cod</parameter>
        <parameter type="string" kind="3">user_id</parameter>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">func_hotel_cod</parameter>
        <parameter type="string" kind="2" condition="pre_id = :pre_id ">pre_id</parameter>
        <parameter type="string" kind="2" condition="current_id = :current_id ">current_id</parameter>
        <parameter type="string" kind="2" condition="id_typ = :id_typ ">id_typ</parameter>
        <orderby>order by pro_id</orderby>
    </dao>


    <!--使用者可使用快選menu-->
    <dao name="QRY_USER_QUICK_MENU">
        <statement><![CDATA[
            select distinct a.athena_id Menu_AthenaID, a.comp_cod , a.hotel_cod , a.subsys_id , a.pro_id ,a.sort_cod
            from bac_quickmenu a
            join bac_role_function g on g.func_athena_id = a.athena_id and g.current_id = a.pro_id
            join bac_role_user h on h.role_athena_id = g.role_athena_id and h.role_id = g.role_id
            where h.user_athena_id = trim(:user_athena_id)
            and trim(h.user_comp_cod) = trim(:user_comp_cod)
            and trim(h.user_id) = trim(:user_id)
            and trim(a.athena_id) = trim(:athena_id)
            and trim(a.hotel_cod) = trim(:func_hotel_cod)

        ]]>
        </statement>

        <parameter type="string" kind="3">user_athena_id</parameter>
        <parameter type="string" kind="3">user_comp_cod</parameter>
        <parameter type="string" kind="3">user_id</parameter>
        <parameter type="string" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">func_hotel_cod</parameter>
        <parameter type="string" kind="2" condition="a.subsys_id = :subsys_id">subsys_id</parameter>
        <orderby>order by a.athena_id, a.comp_cod,a.hotel_cod,a.subsys_id,a.sort_cod,a.pro_id</orderby>

    </dao>

    <!-- 抓取modules -->
    <dao name="QRY_S99_MODULE_BY_SYS_ID">
        <statement><![CDATA[
           select * from s99_model
           where sys_id = :sys_id
           order by sort_cod;
        ]]>
        </statement>
        <parameter type="string" kind="3">sys_id</parameter>
    </dao>

    <!-- 抓取subsystem -->
    <dao name="QRY_BAC_SUBSYSTEM_BY_SYS_ID">
        <statement><![CDATA[
              select *
              from BAC_SUBSYSMENU_RF
              where sys_id  in(:sys_id)
        ]]>
        </statement>
        <parameter type="string" kind="3">sys_id</parameter>
        <orderby>order by subsys_id</orderby>
    </dao>

    <!-- 抓取process -->
    <dao name="QRY_S99_PROCESS_BY_SYS_MODULE">
        <statement><![CDATA[
         select DISTINCT pro.* ,mdl.mdl_name,mdl.mdl_name as mdl_name_zh_TW , mdl_ename as mdl_name_en , mdl.group_sta, mdl.mdl_url, brf.edition
         from s99_process pro
         inner join s99_model mdl on mdl.SYS_ID = pro.SYS_ID and mdl.mdl_id = pro.mdl_id
         inner join bac_role_function  brf on brf.current_id =  pro.pro_id
         where pro.SYS_ID = :sys_id
         and func_athena_id = :athena_id
         and trim(brf.func_hotel_cod) = :hotel_cod
        ]]>
        </statement>
        <parameter type="string" kind="3">sys_id</parameter>
        <parameter type="string" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <orderby>order by pro.mdl_id, pro.pro_id, pro.SORT_COD</orderby>
    </dao>

    <!-- 抓取所有報表 -->
    <dao name="QRY_ALL_REPORT_BY_SYS_ID">
        <statement><![CDATA[
        select *
        from bac_role_function  brf
        inner join s99_model mdl  on mdl.MDL_ID  = brf.current_id
        where mdl.sys_id = :sys_id
        and group_sta = 'R'
        and func_hotel_cod = :hotel_cod
        and func_athena_id= :athena_id
        ]]>
        </statement>
        <parameter type="string" kind="3">sys_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <parameter type="string" kind="3">athena_id</parameter>
        <orderby>order by mdl_id</orderby>
    </dao>


    <!-- 撈取某支作業全部功能權限 -->
    <dao name="QRY_PROCESS_USER_FUNC_PURVIEW">
        <statement><![CDATA[
        select distinct  a.func_athena_id Athena_ID, func_comp_cod , func_hotel_cod , pre_id , current_id , id_typ ,level_nos ,sort_cod,edition
        from BAC_ROLE_FUNCTION a
        join bac_role_user b on a.role_athena_id = b.role_athena_id and a.role_id = b.role_id
        where b.user_athena_id = :athena_id
        and trim(b.user_comp_cod) = trim(:comp_cod)
        and b.user_id = :user_id
        and  a.func_athena_id = :athena_id
        and  trim(a.func_hotel_cod) = trim(:hotel_cod)
        and a.pre_id = :prg_id
        union
        select distinct func_athena_id Athena_ID, func_comp_cod , func_hotel_cod , pre_id , current_id , id_typ ,level_nos ,sort_cod, edition
        from BAC_USER_FUNCTION
        where user_athena_id = :athena_id
        and trim(user_comp_cod) = trim(:comp_cod)
        and user_id = :user_id
        and  func_athena_id = :athena_id
        and  trim(func_hotel_cod) = trim(:hotel_cod)
        and pre_id = :prg_id
        and addorminus = 'ADD'
        minus
        select distinct func_athena_id Athena_ID, func_comp_cod , func_hotel_cod , pre_id , current_id , id_typ ,level_nos ,sort_cod, edition
        from BAC_USER_FUNCTION
        where user_athena_id = :athena_id
        and trim(user_comp_cod) = trim(:comp_cod)
        and user_id = :user_id
        and  func_athena_id = :athena_id
        and  trim(func_hotel_cod) = trim(:hotel_cod)
        and pre_id = :prg_id
        and addorminus = 'MINUS'
        order by
        ]]> </statement>
        <parameter type="string" kind="3">user_id</parameter>
        <parameter type="string" kind="3">comp_cod</parameter>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">hotel_cod</parameter>
        <parameter type="string" kind="3">prg_id</parameter>
        <orderby>level_nos,sort_cod,current_id</orderby>
    </dao>
</root>