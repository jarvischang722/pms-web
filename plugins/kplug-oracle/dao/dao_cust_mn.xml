<?xml version="1.0" encoding="UTF-8"?>
<root>
    <!--
        [PMS0860010] 未於商務公司資料中指定者可刪除
        訊息:在商務公司資料維護已使用,不可刪除
    -->
    <dao name="CHK_CUST_TYPE_RF_IS_EXIST_CUST_MN">
        <statement><![CDATA[
			select count(*) as cust_mn_count from cust_mn
			where  athena_id = trim(:athena_id)
			and trim(type_cod) = trim(:type_cod)
			and rownum = 1
        ]]>
        </statement>
        <parameter type="string" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">type_cod</parameter>
    </dao>

    <!--
    [PMS0860020] 未於商務公司資料中指定者可刪除
    訊息:在商務公司資料維護已使用,不可刪除
-->
    <dao name="QRY_BUSINESS_RF_IS_EXIST_CUST_MN_COUNT">
        <statement><![CDATA[
			select count(*) as cust_mn_count from cust_mn
			where  athena_id = trim(:athena_id)
			and trim(business_cod) = trim(:business_cod)
			and rownum = 1
        ]]>
        </statement>
        <parameter type="string" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">business_cod</parameter>
    </dao>

    <!--
    [PMS0860070] 在商務公司資料維護已使用,不可刪除
    訊息:在商務公司資料維護已使用,不可刪除
-->
    <dao name="CHK_CONSTRACT_STA_IS_EXIST_CUST_MN">
        <statement><![CDATA[
                select count(*) custmncount
                 from cust_mn
                where athena_id =?   and contract_sta = ? and rownum = 1
        ]]>
        </statement>
        <parameter type="string" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">status_cod</parameter>
    </dao>

    <!--[PMS0810180] 顯示ashow_cod跳出訊息的欄位資料 -->
    <dao name="QRY_CUST_MN_FOR_ASHOW_COD">
        <statement><![CDATA[
            select  show_cod, cust_nam, contact1_rmk, status_cod, cust_cod from cust_mn
            where status_cod='N'  and cust_typ='N' and athena_id =?
        ]]>
        </statement>
        <parameter type="string" kind="1">athena_id</parameter>

    </dao>

    <!--[PMS0810180] 顯示cshow_cod跳出訊息的欄位資料 -->
    <dao name="QRY_CUST_MN_FOR_CSHOW_COD">
        <statement><![CDATA[
            select show_cod, cust_nam, contact1_rmk, status_cod,cust_cod  from cust_mn
            where status_cod='N'  and cust_typ='N' and athena_id =?
        ]]>
        </statement>
        <parameter type="string" kind="1">athena_id</parameter>
    </dao>

    <!--[PMS0830090] 顯示cshow_cod跳出訊息的選擇客戶代號 -->
    <dao name="QRY_CUSTMN_DEPOSIT_NOS">
        <statement><![CDATA[
              select show_cod ,cust_nam ,cust_typ
               from cust_mn where athena_id = ? and show_cod = ? and status_cod <> 'D'
        ]]>
        </statement>
        <parameter type="string" kind="1">athena_id</parameter>
        <parameter type="string" kind="1">show_cod</parameter>
    </dao>

    <!--[PMS0860030] 查詢商務公司資料數量 -->
    <dao name="QRY_AREA_COUNT">
        <statement><![CDATA[
              select count(*) as areacount from cust_mn
              where athena_id = :athena_id
              and trim(area_cod) = trim(:area_cod)
              and rownum = 1
        ]]>
        </statement>
        <parameter type="int" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">area_cod</parameter>
    </dao>

    <!--[PMS0830090] 查詢對應的客戶內碼by 客戶代號 -->
    <dao name="QRY_CUST_COD_BY_SHOW_COD">
        <statement><![CDATA[
              select cust_cod
              from cust_mn
              where trim(show_cod) = trim(:show_cod)
              and rownum = 1
        ]]>
        </statement>
        <parameter type="string" kind="3">show_cod</parameter>
    </dao>

    <!--[PMS0830090] 查詢對應的客戶內碼by 客戶名稱 -->
    <dao name="QRY_CUST_COD_BY_CUST_NAM">
        <statement><![CDATA[
              select cust_cod
              from cust_mn
              where trim(cust_nam) = trim(:cust_nam)
              and rownum = 1
        ]]>
        </statement>
        <parameter type="string" kind="3">cust_nam</parameter>
    </dao>

    <!--[PMS0610010] 商務公司 取多筆資料-->
    <dao name="QRY_CUST_MN">
        <statement><![CDATA[
              SELECT CUST_MN.ATHENA_ID AS cust_mn_athena_id, CUST_MN.CUST_COD AS cust_mn_cust_cod, CUST_MN.SHOW_COD AS cust_mn_show_cod, CUST_MN.CUST_NAM AS cust_mn_cust_nam, CUST_MN.STATUS_COD AS cust_mn_status_cod, CONTRACT_STATUS_RF.STATUS_DESC AS contract_status_rf_status_desc, CUST_IDX.UNI_COD AS cust_idx_uni_cod, CUST_PERS_CUST_IDX.ALT_NAM AS cust_pers_cust_idx_alt_nam, SALES_MN.SALES_NAM AS sales_mn_sales_nam,
              CUST_IDX.OFFICE_TEL AS cust_idx_office_tel, CUST_IDX.FAX_NOS AS cust_idx_fax_nos, CUST_IDX.CREDIT_AMT AS cust_idx_credit_amt, CUST_IDX.AR_AMT AS cust_idx_ar_amt
              FROM CUST_IDX, CUST_IDX HOFFICE_CUST_IDX, CUST_IDX PCUST_IDX, CUST_IDX CUST_PERS_CUST_IDX, CUST_MN_PERS_DT, CUST_MN, SALES_MN, CONTRACT_STATUS_RF
              WHERE  CUST_MN.ATHENA_ID = CUST_IDX.ATHENA_ID
              AND  CUST_MN.CUST_COD = CUST_IDX.CUST_COD
              AND  CUST_MN.ATHENA_ID = PCUST_IDX.ATHENA_ID
              AND  CUST_MN.PCUST_COD = PCUST_IDX.CUST_COD
              AND  CUST_MN.ATHENA_ID = HOFFICE_CUST_IDX.ATHENA_ID
              AND  CUST_MN.HOFFICE_COD = HOFFICE_CUST_IDX.CUST_COD
              AND  CUST_MN.ATHENA_ID = CUST_MN_PERS_DT.ATHENA_ID(+)
              AND  CUST_MN.CUST_COD = CUST_MN_PERS_DT.CUST_COD(+)
              AND  CUST_MN.ATTEN_COD = CUST_MN_PERS_DT.SEQ_NOS(+)
              AND  CUST_MN_PERS_DT.PER_CUST_COD = CUST_PERS_CUST_IDX.CUST_COD(+)
              AND  CUST_MN.ATHENA_ID = SALES_MN.ATHENA_ID(+)
              AND  CUST_MN.SALES_COD = SALES_MN.SALES_COD(+)
              AND  CUST_MN.ATHENA_ID = CONTRACT_STATUS_RF.ATHENA_ID(+)
              AND  CUST_MN.CONTRACT_STA = CONTRACT_STATUS_RF.STATUS_COD(+)
              AND  CUST_MN.ATHENA_ID = :athena_id
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="instring" kind="3">area_cod</parameter>
        <statement test="_v(param.area_cod)"><![CDATA[and CUST_MN.area_cod in(:area_cod)]]></statement>
        <parameter type="instring" kind="3">business_cod</parameter>
        <statement test="_v(param.business_cod)"><![CDATA[and CUST_MN.business_cod in(:business_cod)]]></statement>
        <parameter type="instring" kind="3">contract_sta</parameter>
        <statement test="_v(param.contract_sta)"><![CDATA[and CUST_MN.contract_sta in(:contract_sta)]]></statement>
        <parameter type="instring" kind="3">sales_cod</parameter>
        <statement test="_v(param.sales_cod)"><![CDATA[and CUST_MN.sales_cod in(:sales_cod)]]></statement>
        <parameter type="instring" kind="3">type_cod</parameter>
        <statement test="_v(param.type_cod)"><![CDATA[and CUST_MN.type_cod in(:type_cod)]]></statement>
        <parameter type="string" kind="2" condition="trim(CUST_IDX.credit_amt) = trim(:credit_amt) ">credit_amt</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_IDX.ar_amt) = trim(:ar_amt) ">ar_amt</parameter>
        <parameter type="likestring" kind="2" condition="CUST_MN.show_cod like ? ">cust_mn_show_cod</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_MN.cust_nam) = trim(:cust_nam) ">cust_nam</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_MN.hoffice_cod) = trim(:hoffice_cust_idx_cust_cod) ">hoffice_cust_idx_cust_cod</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_MN.pcust_cod) = trim(:pcust_idx_cust_cod) ">pcust_idx_cust_cod</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_IDX.credit_sta) = trim(:credit_sta) ">credit_sta</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_MN.rank_nos) = trim(:rank_nos) ">rank_nos</parameter>
        <parameter type="string" kind="2" condition="trim(CUST_MN.status_cod) = trim(:status_cod) ">status_cod</parameter>
        <parameter type="string" kind="2" condition="trunc(CUST_MN.ins_dat) = to_date(:ins_dat, 'YYYY/MM/DD') ">ins_dat</parameter>
    </dao>

    <!--[PMS0610010] 商務公司 總公司選單-->
    <dao name="SEL_CUST_MN_FOR_PCUST_IDX">
        <statement><![CDATA[
            select cust_cod as pcust_idx_cust_cod, show_cod as pcust_idx_show_cod, cust_nam as pcust_idx_cust_nam from cust_mn where athena_id =:athena_id
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
    </dao>

    <!--[PMS0610010] 商務公司 簽帳公司選單-->
    <dao name="SEL_CUST_MN_FOR_HOFFICE_CUST_IDX">
        <statement><![CDATA[
            select cust_cod as hoffice_cust_idx_cust_cod, show_cod as hoffice_cust_idx_show_cod, cust_nam as hoffice_cust_idx_cust_nam from cust_mn where athena_id =:athena_id
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
    </dao>

    <!--[PMS0610020] 商舞公司資料編輯 取單筆資料-->
    <dao name="QRY_CUST_MN_GS">
        <statement><![CDATA[
            select cust_mn.athena_id as cust_mn_athena_id,cust_mn.cust_cod as cust_mn_cust_cod,cust_mn.show_cod as cust_mn_show_cod,
            cust_mn.cust_nam as cust_mn_cust_nam,cust_mn.status_cod as cust_mn_status_cod,cust_mn.contract_sta as cust_mn_contract_sta,
            cust_mn.owner_nam as cust_mn_owner_nam,cust_mn.atten_cod as cust_mn_atten_cod,(TRIM(cust_mn.sales_cod) ||':'||sales_mn.sales_nam) as cust_mn_sales_cod,
            cust_mn.pcust_cod as cust_mn_pcust_cod,cust_mn.route_cod as cust_mn_route_cod,cust_mn.rank_nos as cust_mn_rank_nos,
            cust_idx.cust_sta as cust_idx_cust_sta,cust_idx.alt_nam as cust_idx_alt_nam,cust_idx.uni_cod as cust_idx_uni_cod,
            cust_idx.uni_title as cust_idx_uni_title,cust_idx.from_table as cust_idx_from_table,cust_idx.cust_typ as cust_idx_cust_typ,
            cust_idx.office_tel as cust_idx_office_tel,cust_idx.fax_nos as cust_idx_fax_nos,cust_idx.mobile_nos as cust_idx_mobile_nos,
            cust_idx.home_tel as cust_idx_home_tel,cust_idx.zip_cod as cust_idx_zip_cod,cust_idx.add_rmk as cust_idx_add_rmk,
            cust_idx.e_mail as cust_idx_e_mail,cust_idx.birth_dat as cust_idx_birth_dat,cust_idx.sex_typ as cust_idx_sex_typ
            from cust_mn, cust_idx, sales_mn
            where cust_mn.athena_id = cust_idx.athena_id
            and cust_mn.cust_cod = cust_idx.cust_cod
            and cust_idx.from_table = 'CUST_MN'
            and cust_mn.athena_id = :athena_id
            and cust_mn.cust_cod = :cust_cod
            and cust_mn.sales_cod = sales_mn.sales_cod
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">cust_cod</parameter>
    </dao>

    <!--[PMS0610020] 總公司下拉選單-->
    <dao name="SEL_CUSTMNPCUSTCOD">
        <statement><![CDATA[
            SELECT CUST_MN.SHOW_COD, CUST_MN.CUST_NAM, CUST_IDX.UNI_COD, CUST_IDX.UNI_TITLE, CUST_MN.CUST_COD
            FROM  CUST_IDX, CUST_MN
            WHERE  CUST_MN.ATHENA_ID = CUST_IDX.ATHENA_ID
            AND  CUST_MN.CUST_COD = CUST_IDX.CUST_COD
            AND  CUST_MN.ATHENA_ID = :athena_id
            AND  CUST_MN.STATUS_COD <> 'D'
            ORDER  BY  CUST_MN.SHOW_COD
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
    </dao>
    <!--
    [PMS0620010] 未於商務公司資料指定者可刪除
    訊息『商務公司資料已使用，不可刪除』
    [PMS0620020] 業務員狀態由「N:在職」改「Q:離職」時，檢查商務公司業務員是否指定此業務員資料，若有指定則不允許修改
    訊息『商務公司資料已使用，不可修改狀態』
    -->
    <dao name="CHK_SALES_COD_IS_EXIST_IN_CUST_MN">
        <statement><![CDATA[
            select count(*) as cust_sales_Count
            from cust_mn
            where athena_id = :athena_id
            and trim(sales_cod) = trim(:sales_cod)
            and rownum = 1
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
        <parameter type="string" kind="3">sales_cod</parameter>
    </dao>

    <!--[PMS0620050] 業務員拜訪記錄 商業公司選單-->
    <dao name="SEL_CUST_MN">
        <statement><![CDATA[
            select cust_cod, cust_nam from cust_mn where athena_id =:athena_id
        ]]>
        </statement>
        <parameter type="number" kind="3">athena_id</parameter>
    </dao>
</root>